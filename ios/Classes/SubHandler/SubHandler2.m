//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

#import "SubHandler2.h"
#import "FluttifyMessageCodec.h"
#import <TXLiteAVSDK_Player/TXLiteAVSDK.h>
#import "TXVodDownloadDelegate_Anonymous.h"
#import "TXVodPlayListener_Anonymous.h"
#import "TXVodPreloadManagerDelegate_Anonymous.h"
#import "TXAudioCustomProcessDelegate_Anonymous.h"
#import "TXAudioRawDataDelegate_Anonymous.h"
#import "TXVideoCustomProcessDelegate_Anonymous.h"

// Dart端一次方法调用所存在的栈, 只有当MethodChannel传递参数受限时, 再启用这个容器
extern NSMutableDictionary<NSString*, NSObject*>* STACK;
// Dart端随机存取对象的容器
extern NSMutableDictionary<NSString*, NSObject*>* HEAP;
// 日志打印开关
extern BOOL enableLog;

@implementation TencentPlayerFluttifyPlugin (SubHandler2)
- (NSDictionary<NSString*, Handler>*) getSubHandler2 {
    __weak __typeof(self)weakSelf = self;
    return @{
        @"TXVodDownloadManager::set_headers": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodDownloadManager::set_headers");
            }
        
            // args
            // jsonable arg
            NSDictionary* headers = (NSDictionary*) args[@"headers"];
        
            // ref
            TXVodDownloadManager* ref = (TXVodDownloadManager*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.headers = headers;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_connectRetryCount": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_connectRetryCount");
            }
        
            // args
            // jsonable arg
            int connectRetryCount = [args[@"connectRetryCount"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.connectRetryCount = connectRetryCount;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_connectRetryInterval": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_connectRetryInterval");
            }
        
            // args
            // jsonable arg
            int connectRetryInterval = [args[@"connectRetryInterval"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.connectRetryInterval = connectRetryInterval;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_timeout": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_timeout");
            }
        
            // args
            // jsonable arg
            NSTimeInterval timeout = [args[@"timeout"] doubleValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.timeout = timeout;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_keepLastFrameWhenStop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_keepLastFrameWhenStop");
            }
        
            // args
            // jsonable arg
            BOOL keepLastFrameWhenStop = [args[@"keepLastFrameWhenStop"] boolValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keepLastFrameWhenStop = keepLastFrameWhenStop;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_firstStartPlayBufferTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_firstStartPlayBufferTime");
            }
        
            // args
            // jsonable arg
            int firstStartPlayBufferTime = [args[@"firstStartPlayBufferTime"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.firstStartPlayBufferTime = firstStartPlayBufferTime;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_nextStartPlayBufferTime": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_nextStartPlayBufferTime");
            }
        
            // args
            // jsonable arg
            int nextStartPlayBufferTime = [args[@"nextStartPlayBufferTime"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.nextStartPlayBufferTime = nextStartPlayBufferTime;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_cacheFolderPath": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_cacheFolderPath");
            }
        
            // args
            // jsonable arg
            NSString* cacheFolderPath = (NSString*) args[@"cacheFolderPath"];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.cacheFolderPath = cacheFolderPath;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxCacheItems": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_maxCacheItems");
            }
        
            // args
            // jsonable arg
            int maxCacheItems = [args[@"maxCacheItems"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.maxCacheItems = maxCacheItems;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_playerType": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_playerType");
            }
        
            // args
            // jsonable arg
            NSInteger playerType = [args[@"playerType"] longValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.playerType = playerType;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_headers": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_headers");
            }
        
            // args
            // jsonable arg
            NSDictionary* headers = (NSDictionary*) args[@"headers"];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.headers = headers;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_enableAccurateSeek": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_enableAccurateSeek");
            }
        
            // args
            // jsonable arg
            BOOL enableAccurateSeek = [args[@"enableAccurateSeek"] boolValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enableAccurateSeek = enableAccurateSeek;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_autoRotate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_autoRotate");
            }
        
            // args
            // jsonable arg
            BOOL autoRotate = [args[@"autoRotate"] boolValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.autoRotate = autoRotate;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_smoothSwitchBitrate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_smoothSwitchBitrate");
            }
        
            // args
            // jsonable arg
            BOOL smoothSwitchBitrate = [args[@"smoothSwitchBitrate"] boolValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.smoothSwitchBitrate = smoothSwitchBitrate;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_progressInterval": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_progressInterval");
            }
        
            // args
            // jsonable arg
            NSTimeInterval progressInterval = [args[@"progressInterval"] doubleValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.progressInterval = progressInterval;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxBufferSize": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_maxBufferSize");
            }
        
            // args
            // jsonable arg
            int maxBufferSize = [args[@"maxBufferSize"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.maxBufferSize = maxBufferSize;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxPreloadSize": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_maxPreloadSize");
            }
        
            // args
            // jsonable arg
            int maxPreloadSize = [args[@"maxPreloadSize"] intValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.maxPreloadSize = maxPreloadSize;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_overlayKey": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_overlayKey");
            }
        
            // args
            // jsonable arg
            NSString* overlayKey = (NSString*) args[@"overlayKey"];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.overlayKey = overlayKey;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_overlayIv": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_overlayIv");
            }
        
            // args
            // jsonable arg
            NSString* overlayIv = (NSString*) args[@"overlayIv"];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.overlayIv = overlayIv;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_enableRenderProcess": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_enableRenderProcess");
            }
        
            // args
            // jsonable arg
            BOOL enableRenderProcess = [args[@"enableRenderProcess"] boolValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enableRenderProcess = enableRenderProcess;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_preferredResolution": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_preferredResolution");
            }
        
            // args
            // jsonable arg
            long preferredResolution = [args[@"preferredResolution"] longValue];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.preferredResolution = preferredResolution;
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_extInfoMap": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayConfig::set_extInfoMap");
            }
        
            // args
            // jsonable arg
            NSDictionary* extInfoMap = (NSDictionary*) args[@"extInfoMap"];
        
            // ref
            TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.extInfoMap = extInfoMap;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_vodDelegate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_vodDelegate");
            }
        
            // args
            // ref arg
            id<TXVodPlayListener> vodDelegate = (id<TXVodPlayListener>) (args[@"vodDelegate"] == [NSNull null] ? nil : args[@"vodDelegate"]);
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.vodDelegate = vodDelegate;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_videoProcessDelegate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_videoProcessDelegate");
            }
        
            // args
            // ref arg
            id<TXVideoCustomProcessDelegate> videoProcessDelegate = (id<TXVideoCustomProcessDelegate>) (args[@"videoProcessDelegate"] == [NSNull null] ? nil : args[@"videoProcessDelegate"]);
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.videoProcessDelegate = videoProcessDelegate;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_enableHWAcceleration": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_enableHWAcceleration");
            }
        
            // args
            // jsonable arg
            BOOL enableHWAcceleration = [args[@"enableHWAcceleration"] boolValue];
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.enableHWAcceleration = enableHWAcceleration;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_config": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_config");
            }
        
            // args
            // ref arg
            TXVodPlayConfig* config = (TXVodPlayConfig*) (args[@"config"] == [NSNull null] ? nil : args[@"config"]);
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.config = config;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_isAutoPlay": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_isAutoPlay");
            }
        
            // args
            // jsonable arg
            BOOL isAutoPlay = [args[@"isAutoPlay"] boolValue];
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.isAutoPlay = isAutoPlay;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_token": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_token");
            }
        
            // args
            // jsonable arg
            NSString* token = (NSString*) args[@"token"];
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.token = token;
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_loop": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXVodPlayer::set_loop");
            }
        
            // args
            // jsonable arg
            BOOL loop = [args[@"loop"] boolValue];
        
            // ref
            TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.loop = loop;
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_index": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXBitrateItem::set_index");
            }
        
            // args
            // jsonable arg
            NSInteger index = [args[@"index"] longValue];
        
            // ref
            TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.index = index;
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_width": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXBitrateItem::set_width");
            }
        
            // args
            // jsonable arg
            NSInteger width = [args[@"width"] longValue];
        
            // ref
            TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.width = width;
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_height": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXBitrateItem::set_height");
            }
        
            // args
            // jsonable arg
            NSInteger height = [args[@"height"] longValue];
        
            // ref
            TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.height = height;
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_bitrate": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXBitrateItem::set_bitrate");
            }
        
            // args
            // jsonable arg
            NSInteger bitrate = [args[@"bitrate"] longValue];
        
            // ref
            TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.bitrate = bitrate;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_appId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_appId");
            }
        
            // args
            // jsonable arg
            int appId = [args[@"appId"] intValue];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.appId = appId;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_fileId": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_fileId");
            }
        
            // args
            // jsonable arg
            NSString* fileId = (NSString*) args[@"fileId"];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.fileId = fileId;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_timeout": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_timeout");
            }
        
            // args
            // jsonable arg
            NSString* timeout = (NSString*) args[@"timeout"];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.timeout = timeout;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_exper": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_exper");
            }
        
            // args
            // jsonable arg
            int exper = [args[@"exper"] intValue];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.exper = exper;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_us": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_us");
            }
        
            // args
            // jsonable arg
            NSString* us = (NSString*) args[@"us"];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.us = us;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_sign": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_sign");
            }
        
            // args
            // jsonable arg
            NSString* sign = (NSString*) args[@"sign"];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.sign = sign;
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_https": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerAuthParams::set_https");
            }
        
            // args
            // jsonable arg
            BOOL https = [args[@"https"] boolValue];
        
            // ref
            TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.https = https;
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_certificateUrl": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerDrmBuilder::set_certificateUrl");
            }
        
            // args
            // jsonable arg
            NSString* certificateUrl = (NSString*) args[@"certificateUrl"];
        
            // ref
            TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.certificateUrl = certificateUrl;
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_keyLicenseUrl": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerDrmBuilder::set_keyLicenseUrl");
            }
        
            // args
            // jsonable arg
            NSString* keyLicenseUrl = (NSString*) args[@"keyLicenseUrl"];
        
            // ref
            TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.keyLicenseUrl = keyLicenseUrl;
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_playUrl": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXPlayerDrmBuilder::set_playUrl");
            }
        
            // args
            // jsonable arg
            NSString* playUrl = (NSString*) args[@"playUrl"];
        
            // ref
            TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.playUrl = playUrl;
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_retCode": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXRecordResult::set_retCode");
            }
        
            // args
            // enum arg
            TXRecordResultCode retCode = (TXRecordResultCode) [args[@"retCode"] integerValue];
        
            // ref
            TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.retCode = retCode;
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_descMsg": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXRecordResult::set_descMsg");
            }
        
            // args
            // jsonable arg
            NSString* descMsg = (NSString*) args[@"descMsg"];
        
            // ref
            TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.descMsg = descMsg;
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_videoPath": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXRecordResult::set_videoPath");
            }
        
            // args
            // jsonable arg
            NSString* videoPath = (NSString*) args[@"videoPath"];
        
            // ref
            TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.videoPath = videoPath;
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_coverImage": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"TXRecordResult::set_coverImage");
            }
        
            // args
            // ref arg
            UIImage* coverImage = (UIImage*) (args[@"coverImage"] == [NSNull null] ? nil : args[@"coverImage"]);
        
            // ref
            TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
            if ((NSNull *) ref == [NSNull null] || ref == nil) {
                methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                return;
            }
        
            ref.coverImage = coverImage;
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_ID_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int32_t ID = [args[@"ID"] intValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.ID = ID;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_path_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* path = (NSString*) args[@"path"];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.path = path;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_loopCount_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger loopCount = [args[@"loopCount"] longValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.loopCount = loopCount;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_publish_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL publish = [args[@"publish"] boolValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.publish = publish;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_isShortFile_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL isShortFile = [args[@"isShortFile"] boolValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.isShortFile = isShortFile;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_startTimeMS_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger startTimeMS = [args[@"startTimeMS"] longValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.startTimeMS = startTimeMS;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXAudioMusicParam::set_endTimeMS_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger endTimeMS = [args[@"endTimeMS"] longValue];
        
                // ref
                TXAudioMusicParam* ref = (TXAudioMusicParam*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.endTimeMS = endTimeMS;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_auth_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // ref arg
                TXPlayerAuthParams* auth = (TXPlayerAuthParams*) (args[@"auth"] == [NSNull null] ? nil : args[@"auth"]);
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.auth = auth;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_quality_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // enum arg
                TXVodQuality quality = (TXVodQuality) [args[@"quality"] integerValue];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.quality = quality;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_token_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* token = (NSString*) args[@"token"];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.token = token;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_templateName_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* templateName = (NSString*) args[@"templateName"];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.templateName = templateName;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_fileId_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* fileId = (NSString*) args[@"fileId"];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.fileId = fileId;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_pSign_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* pSign = (NSString*) args[@"pSign"];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.pSign = pSign;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_appId_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int appId = [args[@"appId"] intValue];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.appId = appId;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadDataSource::set_userName_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* userName = (NSString*) args[@"userName"];
        
                // ref
                TXVodDownloadDataSource* ref = (TXVodDownloadDataSource*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.userName = userName;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_dataSource_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // ref arg
                TXVodDownloadDataSource* dataSource = (TXVodDownloadDataSource*) (args[@"dataSource"] == [NSNull null] ? nil : args[@"dataSource"]);
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.dataSource = dataSource;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_url_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* url = (NSString*) args[@"url"];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.url = url;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_userName_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* userName = (NSString*) args[@"userName"];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.userName = userName;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_duration_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int duration = [args[@"duration"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.duration = duration;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_playableDuration_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int playableDuration = [args[@"playableDuration"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.playableDuration = playableDuration;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_size_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int size = [args[@"size"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.size = size;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_downloadSize_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int downloadSize = [args[@"downloadSize"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.downloadSize = downloadSize;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_segments_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int segments = [args[@"segments"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.segments = segments;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_downloadSegments_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int downloadSegments = [args[@"downloadSegments"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.downloadSegments = downloadSegments;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_progress_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                float progress = [args[@"progress"] floatValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.progress = progress;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_playPath_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* playPath = (NSString*) args[@"playPath"];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.playPath = playPath;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_speed_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int speed = [args[@"speed"] intValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.speed = speed;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadMediaInfo::set_downloadState_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // enum arg
                TXVodDownloadMediaInfoState downloadState = (TXVodDownloadMediaInfoState) [args[@"downloadState"] integerValue];
        
                // ref
                TXVodDownloadMediaInfo* ref = (TXVodDownloadMediaInfo*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.downloadState = downloadState;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodDownloadManager::set_headers_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSDictionary* headers = (NSDictionary*) args[@"headers"];
        
                // ref
                TXVodDownloadManager* ref = (TXVodDownloadManager*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.headers = headers;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_connectRetryCount_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int connectRetryCount = [args[@"connectRetryCount"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.connectRetryCount = connectRetryCount;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_connectRetryInterval_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int connectRetryInterval = [args[@"connectRetryInterval"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.connectRetryInterval = connectRetryInterval;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_timeout_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSTimeInterval timeout = [args[@"timeout"] doubleValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.timeout = timeout;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_keepLastFrameWhenStop_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL keepLastFrameWhenStop = [args[@"keepLastFrameWhenStop"] boolValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.keepLastFrameWhenStop = keepLastFrameWhenStop;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_firstStartPlayBufferTime_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int firstStartPlayBufferTime = [args[@"firstStartPlayBufferTime"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.firstStartPlayBufferTime = firstStartPlayBufferTime;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_nextStartPlayBufferTime_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int nextStartPlayBufferTime = [args[@"nextStartPlayBufferTime"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.nextStartPlayBufferTime = nextStartPlayBufferTime;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_cacheFolderPath_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* cacheFolderPath = (NSString*) args[@"cacheFolderPath"];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.cacheFolderPath = cacheFolderPath;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxCacheItems_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int maxCacheItems = [args[@"maxCacheItems"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.maxCacheItems = maxCacheItems;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_playerType_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger playerType = [args[@"playerType"] longValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.playerType = playerType;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_headers_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSDictionary* headers = (NSDictionary*) args[@"headers"];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.headers = headers;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_enableAccurateSeek_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL enableAccurateSeek = [args[@"enableAccurateSeek"] boolValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.enableAccurateSeek = enableAccurateSeek;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_autoRotate_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL autoRotate = [args[@"autoRotate"] boolValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.autoRotate = autoRotate;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_smoothSwitchBitrate_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL smoothSwitchBitrate = [args[@"smoothSwitchBitrate"] boolValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.smoothSwitchBitrate = smoothSwitchBitrate;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_progressInterval_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSTimeInterval progressInterval = [args[@"progressInterval"] doubleValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.progressInterval = progressInterval;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxBufferSize_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int maxBufferSize = [args[@"maxBufferSize"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.maxBufferSize = maxBufferSize;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_maxPreloadSize_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int maxPreloadSize = [args[@"maxPreloadSize"] intValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.maxPreloadSize = maxPreloadSize;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_overlayKey_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* overlayKey = (NSString*) args[@"overlayKey"];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.overlayKey = overlayKey;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_overlayIv_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* overlayIv = (NSString*) args[@"overlayIv"];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.overlayIv = overlayIv;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_enableRenderProcess_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL enableRenderProcess = [args[@"enableRenderProcess"] boolValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.enableRenderProcess = enableRenderProcess;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_preferredResolution_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                long preferredResolution = [args[@"preferredResolution"] longValue];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.preferredResolution = preferredResolution;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayConfig::set_extInfoMap_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSDictionary* extInfoMap = (NSDictionary*) args[@"extInfoMap"];
        
                // ref
                TXVodPlayConfig* ref = (TXVodPlayConfig*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.extInfoMap = extInfoMap;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_enableHWAcceleration_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL enableHWAcceleration = [args[@"enableHWAcceleration"] boolValue];
        
                // ref
                TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.enableHWAcceleration = enableHWAcceleration;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_config_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // ref arg
                TXVodPlayConfig* config = (TXVodPlayConfig*) (args[@"config"] == [NSNull null] ? nil : args[@"config"]);
        
                // ref
                TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.config = config;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_isAutoPlay_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL isAutoPlay = [args[@"isAutoPlay"] boolValue];
        
                // ref
                TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.isAutoPlay = isAutoPlay;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_token_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* token = (NSString*) args[@"token"];
        
                // ref
                TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.token = token;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXVodPlayer::set_loop_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL loop = [args[@"loop"] boolValue];
        
                // ref
                TXVodPlayer* ref = (TXVodPlayer*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.loop = loop;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_index_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger index = [args[@"index"] longValue];
        
                // ref
                TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.index = index;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_width_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger width = [args[@"width"] longValue];
        
                // ref
                TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.width = width;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_height_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger height = [args[@"height"] longValue];
        
                // ref
                TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.height = height;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXBitrateItem::set_bitrate_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSInteger bitrate = [args[@"bitrate"] longValue];
        
                // ref
                TXBitrateItem* ref = (TXBitrateItem*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.bitrate = bitrate;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_appId_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int appId = [args[@"appId"] intValue];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.appId = appId;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_fileId_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* fileId = (NSString*) args[@"fileId"];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.fileId = fileId;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_timeout_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* timeout = (NSString*) args[@"timeout"];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.timeout = timeout;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_exper_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                int exper = [args[@"exper"] intValue];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.exper = exper;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_us_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* us = (NSString*) args[@"us"];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.us = us;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_sign_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* sign = (NSString*) args[@"sign"];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.sign = sign;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerAuthParams::set_https_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                BOOL https = [args[@"https"] boolValue];
        
                // ref
                TXPlayerAuthParams* ref = (TXPlayerAuthParams*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.https = https;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_certificateUrl_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* certificateUrl = (NSString*) args[@"certificateUrl"];
        
                // ref
                TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.certificateUrl = certificateUrl;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_keyLicenseUrl_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* keyLicenseUrl = (NSString*) args[@"keyLicenseUrl"];
        
                // ref
                TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.keyLicenseUrl = keyLicenseUrl;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXPlayerDrmBuilder::set_playUrl_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* playUrl = (NSString*) args[@"playUrl"];
        
                // ref
                TXPlayerDrmBuilder* ref = (TXPlayerDrmBuilder*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.playUrl = playUrl;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_retCode_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // enum arg
                TXRecordResultCode retCode = (TXRecordResultCode) [args[@"retCode"] integerValue];
        
                // ref
                TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.retCode = retCode;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_descMsg_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* descMsg = (NSString*) args[@"descMsg"];
        
                // ref
                TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.descMsg = descMsg;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_videoPath_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // jsonable arg
                NSString* videoPath = (NSString*) args[@"videoPath"];
        
                // ref
                TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.videoPath = videoPath;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"TXRecordResult::set_coverImage_batch": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            for (NSUInteger __i__ = 0; __i__ < ((NSArray<NSDictionary<NSString*, NSObject*>*>*) argsBatch).count; __i__++) {
                NSDictionary<NSString*, id>* args = [((NSArray<NSDictionary<NSString*, id>*>*) argsBatch) objectAtIndex:__i__];
        
                // args
                // ref arg
                UIImage* coverImage = (UIImage*) (args[@"coverImage"] == [NSNull null] ? nil : args[@"coverImage"]);
        
                // ref
                TXRecordResult* ref = (TXRecordResult*) args[@"__this__"];
                if ((NSNull *) ref == [NSNull null] || ref == nil) {
                    methodResult([FlutterError errorWithCode:@"目标对象为nil" message:@"目标对象为nil" details:@"目标对象为nil"]);
                    return;
                }
        
                ref.coverImage = coverImage;;
                methodResult(@"success");
            }
        
            methodResult(@"success");
        },
        
        @"RefClass::isKindOfTXAudioMusicParam": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXAudioMusicParam class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXAudioEffectManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXAudioEffectManager class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXImageSprite": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXImageSprite class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodDownloadDataSource": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodDownloadDataSource class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodDownloadMediaInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodDownloadMediaInfo class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodDownloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodDownloadManager class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodPlayConfig": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodPlayConfig class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodPreloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodPreloadManager class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXVodPlayer": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXVodPlayer class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXDeviceManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXDeviceManager class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXBitrateItem": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXBitrateItem class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXPlayerAuthParams": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXPlayerAuthParams class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXBeautyManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXBeautyManager class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXPlayerDrmBuilder": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXPlayerDrmBuilder class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXRecordResult": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXRecordResult class]];
            methodResult(@(isTargetType));
        },
        
        @"RefClass::isKindOfTXPlayerGlobalSetting": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // 引用对象
            NSObject* __this__ = ((NSDictionary<NSString*, NSObject*>*) args)[@"__this__"];
        
            BOOL isTargetType = [__this__ isKindOfClass:[TXPlayerGlobalSetting class]];
            methodResult(@(isTargetType));
        },
        
        @"ObjectFactory::createTXAudioMusicParam": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXAudioMusicParam");
            }
        
            TXAudioMusicParam* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXAudioMusicParam alloc] init];
            } else {
                __this__ = [TXAudioMusicParam alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXImageSprite": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXImageSprite");
            }
        
            TXImageSprite* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXImageSprite alloc] init];
            } else {
                __this__ = [TXImageSprite alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodDownloadDataSource": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodDownloadDataSource");
            }
        
            TXVodDownloadDataSource* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodDownloadDataSource alloc] init];
            } else {
                __this__ = [TXVodDownloadDataSource alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodDownloadMediaInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodDownloadMediaInfo");
            }
        
            TXVodDownloadMediaInfo* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodDownloadMediaInfo alloc] init];
            } else {
                __this__ = [TXVodDownloadMediaInfo alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodDownloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodDownloadManager");
            }
        
            TXVodDownloadManager* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodDownloadManager alloc] init];
            } else {
                __this__ = [TXVodDownloadManager alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodPlayConfig": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodPlayConfig");
            }
        
            TXVodPlayConfig* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodPlayConfig alloc] init];
            } else {
                __this__ = [TXVodPlayConfig alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodPreloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodPreloadManager");
            }
        
            TXVodPreloadManager* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodPreloadManager alloc] init];
            } else {
                __this__ = [TXVodPreloadManager alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXVodPlayer": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXVodPlayer");
            }
        
            TXVodPlayer* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXVodPlayer alloc] init];
            } else {
                __this__ = [TXVodPlayer alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXDeviceManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXDeviceManager");
            }
        
            TXDeviceManager* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXDeviceManager alloc] init];
            } else {
                __this__ = [TXDeviceManager alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXBitrateItem": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXBitrateItem");
            }
        
            TXBitrateItem* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXBitrateItem alloc] init];
            } else {
                __this__ = [TXBitrateItem alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXPlayerAuthParams": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXPlayerAuthParams");
            }
        
            TXPlayerAuthParams* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXPlayerAuthParams alloc] init];
            } else {
                __this__ = [TXPlayerAuthParams alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXBeautyManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXBeautyManager");
            }
        
            TXBeautyManager* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXBeautyManager alloc] init];
            } else {
                __this__ = [TXBeautyManager alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXPlayerDrmBuilder": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXPlayerDrmBuilder");
            }
        
            TXPlayerDrmBuilder* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXPlayerDrmBuilder alloc] init];
            } else {
                __this__ = [TXPlayerDrmBuilder alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXRecordResult": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXRecordResult");
            }
        
            TXRecordResult* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXRecordResult alloc] init];
            } else {
                __this__ = [TXRecordResult alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::createTXPlayerGlobalSetting": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            // print log
            if (enableLog) {
                NSLog(@"ObjectFactory::createTXPlayerGlobalSetting");
            }
        
            TXPlayerGlobalSetting* __this__;
            if ([((NSDictionary<NSString*, id>*) args)[@"init"] boolValue]) {
                __this__ = [[TXPlayerGlobalSetting alloc] init];
            } else {
                __this__ = [TXPlayerGlobalSetting alloc];
            }
        
            methodResult(__this__);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXAudioMusicParam": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXAudioMusicParam* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXAudioMusicParam alloc] init];
                } else {
                    __this__ = [TXAudioMusicParam alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXImageSprite": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXImageSprite* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXImageSprite alloc] init];
                } else {
                    __this__ = [TXImageSprite alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodDownloadDataSource": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodDownloadDataSource* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodDownloadDataSource alloc] init];
                } else {
                    __this__ = [TXVodDownloadDataSource alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodDownloadMediaInfo": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodDownloadMediaInfo* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodDownloadMediaInfo alloc] init];
                } else {
                    __this__ = [TXVodDownloadMediaInfo alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodDownloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodDownloadManager* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodDownloadManager alloc] init];
                } else {
                    __this__ = [TXVodDownloadManager alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodPlayConfig": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodPlayConfig* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodPlayConfig alloc] init];
                } else {
                    __this__ = [TXVodPlayConfig alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodPreloadManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodPreloadManager* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodPreloadManager alloc] init];
                } else {
                    __this__ = [TXVodPreloadManager alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXVodPlayer": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXVodPlayer* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXVodPlayer alloc] init];
                } else {
                    __this__ = [TXVodPlayer alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXDeviceManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXDeviceManager* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXDeviceManager alloc] init];
                } else {
                    __this__ = [TXDeviceManager alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXBitrateItem": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXBitrateItem* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXBitrateItem alloc] init];
                } else {
                    __this__ = [TXBitrateItem alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXPlayerAuthParams": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXPlayerAuthParams* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXPlayerAuthParams alloc] init];
                } else {
                    __this__ = [TXPlayerAuthParams alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXBeautyManager": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXBeautyManager* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXBeautyManager alloc] init];
                } else {
                    __this__ = [TXBeautyManager alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXPlayerDrmBuilder": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXPlayerDrmBuilder* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXPlayerDrmBuilder alloc] init];
                } else {
                    __this__ = [TXPlayerDrmBuilder alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXRecordResult": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXRecordResult* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXRecordResult alloc] init];
                } else {
                    __this__ = [TXRecordResult alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"ObjectFactory::create_batchTXPlayerGlobalSetting": ^(NSObject <FlutterPluginRegistrar> * registrar, id argsBatch, FlutterResult methodResult) {
            NSMutableArray<NSObject*>* resultList = [NSMutableArray array];
        
            NSNumber* length = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"length"];
            NSNumber* init = (NSNumber*) ((NSDictionary<NSString*, NSObject*>*) argsBatch)[@"init"];
            for (NSUInteger __i__ = 0; __i__ < [length integerValue]; __i__++) {
                TXPlayerGlobalSetting* __this__;
                if ([init boolValue]) {
                    __this__ = [[TXPlayerGlobalSetting alloc] init];
                } else {
                    __this__ = [TXPlayerGlobalSetting alloc];
                }
                [resultList addObject:__this__];
            }
        
            methodResult(resultList);
        
            if (enableLog) NSLog(@"HEAP: %@", HEAP);
        },
        
        @"TXVodDownloadDelegate::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXVodDownloadDelegate> __result__ = [[TXVodDownloadDelegate_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
        @"TXVodPlayListener::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXVodPlayListener> __result__ = [[TXVodPlayListener_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
        @"TXVodPreloadManagerDelegate::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXVodPreloadManagerDelegate> __result__ = [[TXVodPreloadManagerDelegate_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
        @"TXAudioCustomProcessDelegate::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXAudioCustomProcessDelegate> __result__ = [[TXAudioCustomProcessDelegate_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
        @"TXAudioRawDataDelegate::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXAudioRawDataDelegate> __result__ = [[TXAudioRawDataDelegate_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
        @"TXVideoCustomProcessDelegate::createAnonymous__": ^(NSObject <FlutterPluginRegistrar> * registrar, id args, FlutterResult methodResult) {
            id<TXVideoCustomProcessDelegate> __result__ = [[TXVideoCustomProcessDelegate_Anonymous alloc] initWithFlutterPluginRegistrar:registrar];
            methodResult(__result__);
        },
    };
}

@end
