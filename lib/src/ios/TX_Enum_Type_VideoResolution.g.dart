// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum TX_Enum_Type_VideoResolution {
  VIDEO_RESOLUTION_TYPE_360_640 /* 0 */,
  VIDEO_RESOLUTION_TYPE_540_960 /* 1 */,
  VIDEO_RESOLUTION_TYPE_720_1280 /* 2 */,
  VIDEO_RESOLUTION_TYPE_1080_1920 /* 30 */,
  VIDEO_RESOLUTION_TYPE_640_360 /* 3 */,
  VIDEO_RESOLUTION_TYPE_960_540 /* 4 */,
  VIDEO_RESOLUTION_TYPE_1280_720 /* 5 */,
  VIDEO_RESOLUTION_TYPE_1920_1080 /* 31 */,
  VIDEO_RESOLUTION_TYPE_320_480 /* 6 */,
  VIDEO_RESOLUTION_TYPE_180_320 /* 7 */,
  VIDEO_RESOLUTION_TYPE_270_480 /* 8 */,
  VIDEO_RESOLUTION_TYPE_320_180 /* 9 */,
  VIDEO_RESOLUTION_TYPE_480_270 /* 10 */,
  VIDEO_RESOLUTION_TYPE_240_320 /* 11 */,
  VIDEO_RESOLUTION_TYPE_360_480 /* 12 */,
  VIDEO_RESOLUTION_TYPE_480_640 /* 13 */,
  VIDEO_RESOLUTION_TYPE_320_240 /* 14 */,
  VIDEO_RESOLUTION_TYPE_480_360 /* 15 */,
  VIDEO_RESOLUTION_TYPE_640_480 /* 16 */,
  VIDEO_RESOLUTION_TYPE_480_480 /* 17 */,
  VIDEO_RESOLUTION_TYPE_270_270 /* 18 */,
  VIDEO_RESOLUTION_TYPE_160_160 /* 19 */
}

extension TX_Enum_Type_VideoResolutionToX on TX_Enum_Type_VideoResolution {
  int toValue() {
    switch (this) {
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_360_640: return 0;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_540_960: return 1;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_720_1280: return 2;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1080_1920: return 30;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_640_360: return 3;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_960_540: return 4;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1280_720: return 5;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1920_1080: return 31;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_480: return 6;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_180_320: return 7;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_270_480: return 8;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_180: return 9;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_270: return 10;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_240_320: return 11;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_360_480: return 12;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_640: return 13;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_240: return 14;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_360: return 15;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_640_480: return 16;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_480: return 17;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_270_270: return 18;
      case TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_160_160: return 19;
      default: return 0;
    }
  }
}

extension TX_Enum_Type_VideoResolutionFromX on int {
  TX_Enum_Type_VideoResolution toTX_Enum_Type_VideoResolution() {
    switch (this) {
      case 0: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_360_640;
      case 1: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_540_960;
      case 2: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_720_1280;
      case 30: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1080_1920;
      case 3: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_640_360;
      case 4: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_960_540;
      case 5: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1280_720;
      case 31: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_1920_1080;
      case 6: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_480;
      case 7: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_180_320;
      case 8: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_270_480;
      case 9: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_180;
      case 10: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_270;
      case 11: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_240_320;
      case 12: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_360_480;
      case 13: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_640;
      case 14: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_320_240;
      case 15: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_360;
      case 16: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_640_480;
      case 17: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_480_480;
      case 18: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_270_270;
      case 19: return TX_Enum_Type_VideoResolution.VIDEO_RESOLUTION_TYPE_160_160;
      default: return TX_Enum_Type_VideoResolution.values[this + 0];
    }
  }
}