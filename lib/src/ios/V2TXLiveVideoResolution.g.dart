// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum V2TXLiveVideoResolution {
  V2TXLiveVideoResolution160x160 /* null */,
  V2TXLiveVideoResolution270x270 /* null */,
  V2TXLiveVideoResolution480x480 /* null */,
  V2TXLiveVideoResolution320x240 /* null */,
  V2TXLiveVideoResolution480x360 /* null */,
  V2TXLiveVideoResolution640x480 /* null */,
  V2TXLiveVideoResolution320x180 /* null */,
  V2TXLiveVideoResolution480x270 /* null */,
  V2TXLiveVideoResolution640x360 /* null */,
  V2TXLiveVideoResolution960x540 /* null */,
  V2TXLiveVideoResolution1280x720 /* null */,
  V2TXLiveVideoResolution1920x1080 /* null */
}

extension V2TXLiveVideoResolutionToX on V2TXLiveVideoResolution {
  int toValue() {
    switch (this) {
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution160x160: return V2TXLiveVideoResolution.V2TXLiveVideoResolution160x160.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution270x270: return V2TXLiveVideoResolution.V2TXLiveVideoResolution270x270.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution480x480: return V2TXLiveVideoResolution.V2TXLiveVideoResolution480x480.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution320x240: return V2TXLiveVideoResolution.V2TXLiveVideoResolution320x240.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution480x360: return V2TXLiveVideoResolution.V2TXLiveVideoResolution480x360.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution640x480: return V2TXLiveVideoResolution.V2TXLiveVideoResolution640x480.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution320x180: return V2TXLiveVideoResolution.V2TXLiveVideoResolution320x180.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution480x270: return V2TXLiveVideoResolution.V2TXLiveVideoResolution480x270.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution640x360: return V2TXLiveVideoResolution.V2TXLiveVideoResolution640x360.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution960x540: return V2TXLiveVideoResolution.V2TXLiveVideoResolution960x540.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution1280x720: return V2TXLiveVideoResolution.V2TXLiveVideoResolution1280x720.index + 0;
      case V2TXLiveVideoResolution.V2TXLiveVideoResolution1920x1080: return V2TXLiveVideoResolution.V2TXLiveVideoResolution1920x1080.index + 0;
      default: return 0;
    }
  }
}

extension V2TXLiveVideoResolutionFromX on int {
  V2TXLiveVideoResolution toV2TXLiveVideoResolution() {
    switch (this) {
      
      default: return V2TXLiveVideoResolution.values[this + 0];
    }
  }
}