// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tencent_player_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';



mixin V2TXLivePlayerObserver on NSObject {
  

  

  @override
  final String tag__ = 'tencent_player_fluttify';

  

  

  /* @mustCallSuper */
  Future<void> onError_code_message_extraInfo(V2TXLivePlayer player, V2TXLiveCode code, String msg, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onWarning_code_message_extraInfo(V2TXLivePlayer player, V2TXLiveCode code, String msg, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onVideoResolutionChanged_width_height(V2TXLivePlayer player, int width, int height) async {}
  
  /* @mustCallSuper */
  Future<void> onConnected_extraInfo(V2TXLivePlayer player, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onVideoPlaying_firstPlay_extraInfo(V2TXLivePlayer player, bool firstPlay, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onAudioPlaying_firstPlay_extraInfo(V2TXLivePlayer player, bool firstPlay, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onVideoLoading_extraInfo(V2TXLivePlayer player, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onAudioLoading_extraInfo(V2TXLivePlayer player, Map extraInfo) async {}
  
  /* @mustCallSuper */
  Future<void> onPlayoutVolumeUpdate_volume(V2TXLivePlayer player, int volume) async {}
  
  /* @mustCallSuper */
  Future<void> onStatisticsUpdate_statistics(V2TXLivePlayer player, V2TXLivePlayerStatistics statistics) async {}
  
  /* @mustCallSuper */
  Future<void> onSnapshotComplete_image(V2TXLivePlayer player, UIImage image) async {}
  
  /* @mustCallSuper */
  Future<void> onRenderVideoFrame_frame(V2TXLivePlayer player, V2TXLiveVideoFrame videoFrame) async {}
  
  /* @mustCallSuper */
  Future<void> onReceiveSeiMessage_payloadType_data(V2TXLivePlayer player, int payloadType, NSData data) async {}
  
}

