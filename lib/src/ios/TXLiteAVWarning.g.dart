// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum TXLiteAVWarning {
  WARNING_HW_ENCODER_START_FAIL /* 1103 */,
  WARNING_CURRENT_ENCODE_TYPE_CHANGED /* 1104 */,
  WARNING_VIDEO_ENCODER_SW_TO_HW /* 1107 */,
  WARNING_INSUFFICIENT_CAPTURE_FPS /* 1108 */,
  WARNING_SW_ENCODER_START_FAIL /* 1109 */,
  WARNING_REDUCE_CAPTURE_RESOLUTION /* 1110 */,
  WARNING_CAMERA_DEVICE_EMPTY /* 1111 */,
  WARNING_CAMERA_NOT_AUTHORIZED /* 1112 */,
  WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED /* 1206 */,
  WARNING_VIDEO_FRAME_DECODE_FAIL /* 2101 */,
  WARNING_HW_DECODER_START_FAIL /* 2106 */,
  WARNING_VIDEO_DECODER_HW_TO_SW /* 2108 */,
  WARNING_SW_DECODER_START_FAIL /* 2109 */,
  WARNING_VIDEO_RENDER_FAIL /* 2110 */,
  WARNING_MICROPHONE_DEVICE_EMPTY /* 1201 */,
  WARNING_SPEAKER_DEVICE_EMPTY /* 1202 */,
  WARNING_MICROPHONE_NOT_AUTHORIZED /* 1203 */,
  WARNING_MICROPHONE_DEVICE_ABNORMAL /* 1204 */,
  WARNING_SPEAKER_DEVICE_ABNORMAL /* 1205 */,
  WARNING_AUDIO_FRAME_DECODE_FAIL /* 2102 */,
  WARNING_AUDIO_RECORDING_WRITE_FAIL /* 7001 */,
  WARNING_MICROPHONE_HOWLING_DETECTED /* 7002 */,
  WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE /* 6001 */
}

extension TXLiteAVWarningToX on TXLiteAVWarning {
  int toValue() {
    switch (this) {
      case TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL: return 1103;
      case TXLiteAVWarning.WARNING_CURRENT_ENCODE_TYPE_CHANGED: return 1104;
      case TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW: return 1107;
      case TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS: return 1108;
      case TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL: return 1109;
      case TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION: return 1110;
      case TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY: return 1111;
      case TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED: return 1112;
      case TXLiteAVWarning.WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED: return 1206;
      case TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL: return 2101;
      case TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL: return 2106;
      case TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW: return 2108;
      case TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL: return 2109;
      case TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL: return 2110;
      case TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY: return 1201;
      case TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY: return 1202;
      case TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED: return 1203;
      case TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL: return 1204;
      case TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL: return 1205;
      case TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL: return 2102;
      case TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL: return 7001;
      case TXLiteAVWarning.WARNING_MICROPHONE_HOWLING_DETECTED: return 7002;
      case TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE: return 6001;
      default: return 0;
    }
  }
}

extension TXLiteAVWarningFromX on int {
  TXLiteAVWarning toTXLiteAVWarning() {
    switch (this) {
      case 1103: return TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL;
      case 1104: return TXLiteAVWarning.WARNING_CURRENT_ENCODE_TYPE_CHANGED;
      case 1107: return TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW;
      case 1108: return TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS;
      case 1109: return TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL;
      case 1110: return TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION;
      case 1111: return TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY;
      case 1112: return TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED;
      case 1206: return TXLiteAVWarning.WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED;
      case 2101: return TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL;
      case 2106: return TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL;
      case 2108: return TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW;
      case 2109: return TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL;
      case 2110: return TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL;
      case 1201: return TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY;
      case 1202: return TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY;
      case 1203: return TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED;
      case 1204: return TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL;
      case 1205: return TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL;
      case 2102: return TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL;
      case 7001: return TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL;
      case 7002: return TXLiteAVWarning.WARNING_MICROPHONE_HOWLING_DETECTED;
      case 6001: return TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE;
      default: return TXLiteAVWarning.values[this + 1103];
    }
  }
}