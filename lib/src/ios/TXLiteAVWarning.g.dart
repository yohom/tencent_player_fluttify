// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum TXLiteAVWarning {
  WARNING_HW_ENCODER_START_FAIL /* 1103 */,
  WARNING_CURRENT_ENCODE_TYPE_CHANGED /* 1104 */,
  WARNING_VIDEO_ENCODER_SW_TO_HW /* 1107 */,
  WARNING_INSUFFICIENT_CAPTURE_FPS /* 1108 */,
  WARNING_SW_ENCODER_START_FAIL /* 1109 */,
  WARNING_REDUCE_CAPTURE_RESOLUTION /* 1110 */,
  WARNING_CAMERA_DEVICE_EMPTY /* 1111 */,
  WARNING_CAMERA_NOT_AUTHORIZED /* 1112 */,
  WARNING_MICROPHONE_DEVICE_EMPTY /* 1201 */,
  WARNING_SPEAKER_DEVICE_EMPTY /* 1202 */,
  WARNING_MICROPHONE_NOT_AUTHORIZED /* 1203 */,
  WARNING_MICROPHONE_DEVICE_ABNORMAL /* 1204 */,
  WARNING_SPEAKER_DEVICE_ABNORMAL /* 1205 */,
  WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED /* 1206 */,
  WARNING_VIDEO_FRAME_DECODE_FAIL /* 2101 */,
  WARNING_AUDIO_FRAME_DECODE_FAIL /* 2102 */,
  WARNING_VIDEO_PLAY_LAG /* 2105 */,
  WARNING_HW_DECODER_START_FAIL /* 2106 */,
  WARNING_VIDEO_DECODER_HW_TO_SW /* 2108 */,
  WARNING_SW_DECODER_START_FAIL /* 2109 */,
  WARNING_VIDEO_RENDER_FAIL /* 2110 */,
  WARNING_START_CAPTURE_IGNORED /* 4000 */,
  WARNING_AUDIO_RECORDING_WRITE_FAIL /* 7001 */,
  WARNING_ROOM_DISCONNECT /* 5101 */,
  WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE /* 6001 */,
  WARNING_MICROPHONE_HOWLING_DETECTED /* 7002 */,
  WARNING_NET_BUSY /* 1101 */,
  WARNING_RTMP_SERVER_RECONNECT /* 1102 */,
  WARNING_LIVE_STREAM_SERVER_RECONNECT /* 2103 */,
  WARNING_RECV_DATA_LAG /* 2104 */,
  WARNING_RTMP_DNS_FAIL /* 3001 */,
  WARNING_RTMP_SEVER_CONN_FAIL /* 3002 */,
  WARNING_RTMP_SHAKE_FAIL /* 3003 */,
  WARNING_RTMP_SERVER_BREAK_CONNECT /* 3004 */,
  WARNING_RTMP_READ_WRITE_FAIL /* 3005 */,
  WARNING_RTMP_WRITE_FAIL /* 3006 */,
  WARNING_RTMP_READ_FAIL /* 3007 */,
  WARNING_RTMP_NO_DATA /* 3008 */,
  WARNING_PLAY_LIVE_STREAM_INFO_CONNECT_FAIL /* 3009 */,
  WARNING_NO_STEAM_SOURCE_FAIL /* 3010 */,
  WARNING_ROOM_RECONNECT /* 5102 */,
  WARNING_ROOM_NET_BUSY /* 5103 */
}

extension TXLiteAVWarningToX on TXLiteAVWarning {
  int toValue() {
    switch (this) {
      case TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL: return 1103;
      case TXLiteAVWarning.WARNING_CURRENT_ENCODE_TYPE_CHANGED: return 1104;
      case TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW: return 1107;
      case TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS: return 1108;
      case TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL: return 1109;
      case TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION: return 1110;
      case TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY: return 1111;
      case TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED: return 1112;
      case TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY: return 1201;
      case TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY: return 1202;
      case TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED: return 1203;
      case TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL: return 1204;
      case TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL: return 1205;
      case TXLiteAVWarning.WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED: return 1206;
      case TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL: return 2101;
      case TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL: return 2102;
      case TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG: return 2105;
      case TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL: return 2106;
      case TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW: return 2108;
      case TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL: return 2109;
      case TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL: return 2110;
      case TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED: return 4000;
      case TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL: return 7001;
      case TXLiteAVWarning.WARNING_ROOM_DISCONNECT: return 5101;
      case TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE: return 6001;
      case TXLiteAVWarning.WARNING_MICROPHONE_HOWLING_DETECTED: return 7002;
      case TXLiteAVWarning.WARNING_NET_BUSY: return 1101;
      case TXLiteAVWarning.WARNING_RTMP_SERVER_RECONNECT: return 1102;
      case TXLiteAVWarning.WARNING_LIVE_STREAM_SERVER_RECONNECT: return 2103;
      case TXLiteAVWarning.WARNING_RECV_DATA_LAG: return 2104;
      case TXLiteAVWarning.WARNING_RTMP_DNS_FAIL: return 3001;
      case TXLiteAVWarning.WARNING_RTMP_SEVER_CONN_FAIL: return 3002;
      case TXLiteAVWarning.WARNING_RTMP_SHAKE_FAIL: return 3003;
      case TXLiteAVWarning.WARNING_RTMP_SERVER_BREAK_CONNECT: return 3004;
      case TXLiteAVWarning.WARNING_RTMP_READ_WRITE_FAIL: return 3005;
      case TXLiteAVWarning.WARNING_RTMP_WRITE_FAIL: return 3006;
      case TXLiteAVWarning.WARNING_RTMP_READ_FAIL: return 3007;
      case TXLiteAVWarning.WARNING_RTMP_NO_DATA: return 3008;
      case TXLiteAVWarning.WARNING_PLAY_LIVE_STREAM_INFO_CONNECT_FAIL: return 3009;
      case TXLiteAVWarning.WARNING_NO_STEAM_SOURCE_FAIL: return 3010;
      case TXLiteAVWarning.WARNING_ROOM_RECONNECT: return 5102;
      case TXLiteAVWarning.WARNING_ROOM_NET_BUSY: return 5103;
      default: return 0;
    }
  }
}

extension TXLiteAVWarningFromX on int {
  TXLiteAVWarning toTXLiteAVWarning() {
    switch (this) {
      case 1103: return TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL;
      case 1104: return TXLiteAVWarning.WARNING_CURRENT_ENCODE_TYPE_CHANGED;
      case 1107: return TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW;
      case 1108: return TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS;
      case 1109: return TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL;
      case 1110: return TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION;
      case 1111: return TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY;
      case 1112: return TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED;
      case 1201: return TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY;
      case 1202: return TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY;
      case 1203: return TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED;
      case 1204: return TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL;
      case 1205: return TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL;
      case 1206: return TXLiteAVWarning.WARNING_SCREEN_CAPTURE_NOT_AUTHORIZED;
      case 2101: return TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL;
      case 2102: return TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL;
      case 2105: return TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG;
      case 2106: return TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL;
      case 2108: return TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW;
      case 2109: return TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL;
      case 2110: return TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL;
      case 4000: return TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED;
      case 7001: return TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL;
      case 5101: return TXLiteAVWarning.WARNING_ROOM_DISCONNECT;
      case 6001: return TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE;
      case 7002: return TXLiteAVWarning.WARNING_MICROPHONE_HOWLING_DETECTED;
      case 1101: return TXLiteAVWarning.WARNING_NET_BUSY;
      case 1102: return TXLiteAVWarning.WARNING_RTMP_SERVER_RECONNECT;
      case 2103: return TXLiteAVWarning.WARNING_LIVE_STREAM_SERVER_RECONNECT;
      case 2104: return TXLiteAVWarning.WARNING_RECV_DATA_LAG;
      case 3001: return TXLiteAVWarning.WARNING_RTMP_DNS_FAIL;
      case 3002: return TXLiteAVWarning.WARNING_RTMP_SEVER_CONN_FAIL;
      case 3003: return TXLiteAVWarning.WARNING_RTMP_SHAKE_FAIL;
      case 3004: return TXLiteAVWarning.WARNING_RTMP_SERVER_BREAK_CONNECT;
      case 3005: return TXLiteAVWarning.WARNING_RTMP_READ_WRITE_FAIL;
      case 3006: return TXLiteAVWarning.WARNING_RTMP_WRITE_FAIL;
      case 3007: return TXLiteAVWarning.WARNING_RTMP_READ_FAIL;
      case 3008: return TXLiteAVWarning.WARNING_RTMP_NO_DATA;
      case 3009: return TXLiteAVWarning.WARNING_PLAY_LIVE_STREAM_INFO_CONNECT_FAIL;
      case 3010: return TXLiteAVWarning.WARNING_NO_STEAM_SOURCE_FAIL;
      case 5102: return TXLiteAVWarning.WARNING_ROOM_RECONNECT;
      case 5103: return TXLiteAVWarning.WARNING_ROOM_NET_BUSY;
      default: return TXLiteAVWarning.values[this + 1103];
    }
  }
}