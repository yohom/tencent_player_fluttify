// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum TX_Enum_VideoResolution {
  VIDEO_RESOLUTION_720X1280 /* 720*1280 */,
  VIDEO_RESOLUTION_1080X1920 /* 1080*1920 */,
  VIDEO_RESOLUTION_1440X2560 /* 1440*2560 */,
  VIDEO_RESOLUTION_2160X3840 /* 2160*3840 */
}

extension TX_Enum_VideoResolutionToX on TX_Enum_VideoResolution {
  int toValue() {
    switch (this) {
      case TX_Enum_VideoResolution.VIDEO_RESOLUTION_720X1280: return 720*1280;
      case TX_Enum_VideoResolution.VIDEO_RESOLUTION_1080X1920: return 1080*1920;
      case TX_Enum_VideoResolution.VIDEO_RESOLUTION_1440X2560: return 1440*2560;
      case TX_Enum_VideoResolution.VIDEO_RESOLUTION_2160X3840: return 2160*3840;
      default: return 0;
    }
  }
}

extension TX_Enum_VideoResolutionFromX on int {
  TX_Enum_VideoResolution toTX_Enum_VideoResolution() {
    switch (this) {
      case 720*1280: return TX_Enum_VideoResolution.VIDEO_RESOLUTION_720X1280;
      case 1080*1920: return TX_Enum_VideoResolution.VIDEO_RESOLUTION_1080X1920;
      case 1440*2560: return TX_Enum_VideoResolution.VIDEO_RESOLUTION_1440X2560;
      case 2160*3840: return TX_Enum_VideoResolution.VIDEO_RESOLUTION_2160X3840;
      default: return TX_Enum_VideoResolution.values[this + 720*1280];
    }
  }
}