// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tencent_player_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class TXAudioMusicParam extends NSObject  {
  //region constants
  static const String name__ = 'TXAudioMusicParam';

  @override
  final String tag__ = 'tencent_player_fluttify';

  
  //endregion

  //region creators
  static Future<TXAudioMusicParam> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod(
      'ObjectFactory::createTXAudioMusicParam',
      {'init': init}
    );
    return TencentPlayerFluttifyIOSAs<TXAudioMusicParam>(__result__)!;
  }
  
  static Future<List<TXAudioMusicParam>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kTencentPlayerFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchTXAudioMusicParam',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => TencentPlayerFluttifyIOSAs<TXAudioMusicParam>(it))
        .where((element) => element !=null)
        .cast<TXAudioMusicParam>()
        .toList() ?? <TXAudioMusicParam>[];
  }
  
  //endregion

  //region getters
  Future<int?> get_ID() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_ID", {'__this__': this});
    return __result__;
  }
  
  Future<String?> get_path() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_path", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_loopCount() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_loopCount", {'__this__': this});
    return __result__;
  }
  
  Future<bool?> get_publish() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_publish", {'__this__': this});
    return __result__;
  }
  
  Future<bool?> get_isShortFile() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_isShortFile", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_startTimeMS() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_startTimeMS", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_endTimeMS() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_endTimeMS", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_ID(int? ID) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_ID', <String, dynamic>{'__this__': this, "ID": ID});
  }
  
  Future<void> set_path(String? path) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_path', <String, dynamic>{'__this__': this, "path": path});
  }
  
  Future<void> set_loopCount(int? loopCount) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_loopCount', <String, dynamic>{'__this__': this, "loopCount": loopCount});
  }
  
  Future<void> set_publish(bool? publish) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_publish', <String, dynamic>{'__this__': this, "publish": publish});
  }
  
  Future<void> set_isShortFile(bool? isShortFile) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_isShortFile', <String, dynamic>{'__this__': this, "isShortFile": isShortFile});
  }
  
  Future<void> set_startTimeMS(int? startTimeMS) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_startTimeMS', <String, dynamic>{'__this__': this, "startTimeMS": startTimeMS});
  }
  
  Future<void> set_endTimeMS(int? endTimeMS) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_endTimeMS', <String, dynamic>{'__this__': this, "endTimeMS": endTimeMS});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'TXAudioMusicParam{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension TXAudioMusicParam_Batch on List<TXAudioMusicParam?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<int?>> get_ID_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_ID_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<String?>> get_path_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_path_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<String?>().toList();
  }
  
  Future<List<int?>> get_loopCount_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_loopCount_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<bool?>> get_publish_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_publish_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<bool?>().toList();
  }
  
  Future<List<bool?>> get_isShortFile_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_isShortFile_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<bool?>().toList();
  }
  
  Future<List<int?>> get_startTimeMS_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_startTimeMS_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_endTimeMS_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("TXAudioMusicParam::get_endTimeMS_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_ID_batch(List<int?> ID) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_ID_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "ID": ID[__i__]}]);
  
  
  }
  
  Future<void> set_path_batch(List<String?> path) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_path_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "path": path[__i__]}]);
  
  
  }
  
  Future<void> set_loopCount_batch(List<int?> loopCount) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_loopCount_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "loopCount": loopCount[__i__]}]);
  
  
  }
  
  Future<void> set_publish_batch(List<bool?> publish) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_publish_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "publish": publish[__i__]}]);
  
  
  }
  
  Future<void> set_isShortFile_batch(List<bool?> isShortFile) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_isShortFile_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "isShortFile": isShortFile[__i__]}]);
  
  
  }
  
  Future<void> set_startTimeMS_batch(List<int?> startTimeMS) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_startTimeMS_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "startTimeMS": startTimeMS[__i__]}]);
  
  
  }
  
  Future<void> set_endTimeMS_batch(List<int?> endTimeMS) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('TXAudioMusicParam::set_endTimeMS_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "endTimeMS": endTimeMS[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}