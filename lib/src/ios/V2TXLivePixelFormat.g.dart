// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum V2TXLivePixelFormat {
  V2TXLivePixelFormatUnknown /* null */,
  V2TXLivePixelFormatI420 /* null */,
  V2TXLivePixelFormatNV12 /* null */,
  V2TXLivePixelFormatBGRA32 /* null */,
  V2TXLivePixelFormatTexture2D /* null */
}

extension V2TXLivePixelFormatToX on V2TXLivePixelFormat {
  int toValue() {
    switch (this) {
      case V2TXLivePixelFormat.V2TXLivePixelFormatUnknown: return V2TXLivePixelFormat.V2TXLivePixelFormatUnknown.index + 0;
      case V2TXLivePixelFormat.V2TXLivePixelFormatI420: return V2TXLivePixelFormat.V2TXLivePixelFormatI420.index + 0;
      case V2TXLivePixelFormat.V2TXLivePixelFormatNV12: return V2TXLivePixelFormat.V2TXLivePixelFormatNV12.index + 0;
      case V2TXLivePixelFormat.V2TXLivePixelFormatBGRA32: return V2TXLivePixelFormat.V2TXLivePixelFormatBGRA32.index + 0;
      case V2TXLivePixelFormat.V2TXLivePixelFormatTexture2D: return V2TXLivePixelFormat.V2TXLivePixelFormatTexture2D.index + 0;
      default: return 0;
    }
  }
}

extension V2TXLivePixelFormatFromX on int {
  V2TXLivePixelFormat toV2TXLivePixelFormat() {
    switch (this) {
      
      default: return V2TXLivePixelFormat.values[this + 0];
    }
  }
}