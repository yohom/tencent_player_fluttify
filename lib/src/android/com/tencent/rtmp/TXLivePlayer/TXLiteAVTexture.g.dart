// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:tencent_player_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture';

  @override
  final String tag__ = 'tencent_player_fluttify';

  
  //endregion

  //region creators
  static Future<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture> create__() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_tencent_rtmp_TXLivePlayer_TXLiteAVTexture__',
    
    );
    return TencentPlayerFluttifyAndroidAs<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture>(__result__)!;
  }
  
  static Future<List<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kTencentPlayerFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_tencent_rtmp_TXLivePlayer_TXLiteAVTexture__',
      {'length': length}
    );
    return __result_batch__
        ?.map((it) => TencentPlayerFluttifyAndroidAs<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture>(it))
        .where((element) => element !=null)
        .cast<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture>()
        .toList() ?? <com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture>[];
  }
  
  //endregion

  //region getters
  Future<int?> get_textureId() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_textureId", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_width() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_width", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_height() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_height", {'__this__': this});
    return __result__;
  }
  
  Future<Object?> get_eglContext() async {
    final __result__ = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_eglContext", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_textureId(int textureId) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_textureId', <String, dynamic>{'__this__': this, "textureId": textureId});
  }
  
  Future<void> set_width(int width) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_width', <String, dynamic>{'__this__': this, "width": width});
  }
  
  Future<void> set_height(int height) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_height', <String, dynamic>{'__this__': this, "height": height});
  }
  
  Future<void> set_eglContext(Object eglContext) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_eglContext', <String, dynamic>{'__this__': this, "eglContext": eglContext});
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture_Batch on List<com_tencent_rtmp_TXLivePlayer_TXLiteAVTexture?> {
  String? get refId {
    if (isEmpty) return null;
    return first?.refId;
  }

  //region getters
  Future<List<int?>> get_textureId_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_textureId_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_width_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_width_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>> get_height_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_height_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<Object?>> get_eglContext_batch() async {
    final resultBatch = await kTencentPlayerFluttifyChannel.invokeMethod("com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::get_eglContext_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<Object?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_textureId_batch(List<int> textureId) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_textureId_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "textureId": textureId[__i__]}]);
  
  
  }
  
  Future<void> set_width_batch(List<int> width) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_width_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "width": width[__i__]}]);
  
  
  }
  
  Future<void> set_height_batch(List<int> height) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_height_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "height": height[__i__]}]);
  
  
  }
  
  Future<void> set_eglContext_batch(List<Object> eglContext) async {
    await kTencentPlayerFluttifyChannel.invokeMethod('com.tencent.rtmp.TXLivePlayer.TXLiteAVTexture::set_eglContext_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "eglContext": eglContext[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}